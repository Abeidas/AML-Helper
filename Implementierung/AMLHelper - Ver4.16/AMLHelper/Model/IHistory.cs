///////////////////////////////////////////////////////////
//  History.cs
//  Implementation of the Interface History
//  Generated by Enterprise Architect
//  Created on:      30-Jan-2016 10:51:20
//  Original author: kelln_000
///////////////////////////////////////////////////////////

using AMLHelper.ElementExtraction;
using System.ComponentModel;

namespace AMLHelper.Model {

	/// <summary>
	/// Diese Schnittstelle ordnet Elemente in einem Verlauf an, ähnlich wie bei einem
	/// (Web-) Browser.
	/// </summary>
	public interface IHistory : INotifyPropertyChanged {

        /// <summary>
        /// Variable, die über ein Binding für die IsEnabled-Eigenschaft des Backward_Buttons
        /// zuständig ist.
        /// </summary>
        bool backwardButton_enable { get; }

        /// <summary>
        /// Variable, die über ein Binding für die IsEnabled-Eigenschaft des Forward_Buttons
        /// zuständig ist.
        /// </summary>
        bool forwardButton_enable { get; }

		/// <summary>
		/// Fügt ein Element zur Historie hinzu und setzt dieses als das aktuell betrachtete
		/// </summary>
		/// <param name="element"></param>
		void AddElementToHistory(CAEXElement element);

		/// <summary>
		/// Gibt das nächste Element in der Historie zurück oder null wenn dieses nicht
		/// exisitiert. Falls es existiert wird der index Zeiger auf dieses bewegt und
        /// es wird als neues derzeitiges Element akzeptiert
		/// </summary>
        CAEXElement GoToNextElement();

        /// <summary>
        /// Gibt das nächste Element in der Historie zurück. null wenn dieses nicht
        /// exisitiert. Verändert den index des aktuell betrachteten Elements nicht
        /// </summary>
        CAEXElement PeekNextElement();

        /// <summary>
        /// Gibt das vorherige Element zurück und gibt null zurück, falls es dieses nicht gibt.
        /// Falls es existiert wird der index Zeiger auf dieses bewegt und
        /// es wird als neues derzeitiges Element akzeptiert
        /// </summary>
        CAEXElement GoToPreviousElement();

        /// <summary>
        /// Gibt das vorherige Element zurück. Gibt null zurück, falls es dieses nicht gibt.
        /// Verändert den index des aktuell betrachteten Elements nicht
        /// </summary>
        CAEXElement PeekPreviousElement();
    }//end History

}//end namespace Model