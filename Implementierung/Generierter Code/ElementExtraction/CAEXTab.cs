///////////////////////////////////////////////////////////
//  CAEXTab.cs
//  Implementation of the Class CAEXTab
//  Generated by Enterprise Architect
//  Created on:      30-Jan-2016 10:51:20
//  Original author: Team
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using AMLHelperPlugin.Controller;
using AMLHelperPlugin.View;
using Bibliotheken.Windows.ComponentModel;
namespace AMLHelperPlugin.ElementExtraction {
	/// <summary>
	/// Während des Ablaufs des Programms muss es möglich, der Name eines "CAEXObject"
	/// geändert zu werden, folglich muss der Name im Baum, im TabPanel und im
	/// "TabPanel" des Elterns aktualisiert werden, daher ist "CAEXObject" mit der
	/// Schnittstelle INotifyPropertyChanged erweitert.
	/// Bitte TabPanel lesen.
	/// Bitte InterfaceElement lesen.
	/// </summary>
	public class CAEXTab : INotifyPropertyChanged {

		/// <summary>
		/// das erhaltene CAEXObject von anderen Klassen
		/// </summary>
		private CAEXObject caex;
		private long id;
		/// <summary>
		/// Der Name wird mit dem Design gebindet, die Eigenschaft, die diesen Attribut
		/// aktualisiert verwendet OnPropertyChanged
		/// </summary>
		private string name;
		public PropertyChangedEventHandler propertyChanged;
		/// <summary>
		/// 1
		/// </summary>
		public AMLHelperPlugin.Controller.CAEXTreeView m_CAEXTreeView;
		public AMLHelperPlugin.View.TabPanel m_TabPanel;

		public CAEXTab(){

		}

		/// 
		/// <param name="caex"></param>
		public CAEXTab(CAEXObject caex){

		}

		~CAEXTab(){

		}

		public string GetName(){

			return "";
		}

		/// 
		/// <param name="propertyName"></param>
		public void OnPropertyChanged(string propertyName){

		}

		/// 
		/// <param name="name"></param>
		public void SetName(string name){

		}

	}//end CAEXTab

}//end namespace ElementExtraction